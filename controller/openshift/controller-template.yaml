---
kind: Template
apiVersion: v1
labels:
  app: kite-controller
  template: kite-controller-template
metadata:
  name: kite-controller
  annotations:
    openshift.io/display-name: kite action controller
    tags: kite,controller,kite-controller

objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      labels:
        app: ${KITE_CONTROLLER_NAME}
      name: ${KITE_CONTROLLER_SERVICE_NAME}
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      labels:
        app: ${KITE_CONTROLLER_NAME}
      name: ${KITE_CONTROLLER_SERVICE_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${KITE_CONTROLLER_IMAGE_STREAM_TAG}
      resources: {}
      source:
        contextDir: ${CONTEXTDIR}
        git:
          uri: ${REPO_URL}
          ref: ${REPO_REF}
        type: Git
      strategy:
        type: Docker
        dockerStrategy:
          noCache: true
          forcePull: true
      triggers:
        - type: ConfigChange
      successfulBuildsHistoryLimit: 2
      failedBuildsHistoryLimit: 2
  - kind: Route
    apiVersion: v1
    metadata:
      name: ${KITE_CONTROLLER_SERVICE_NAME}
      annotations:
        template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    spec:
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      to:
        kind: Service
        name: ${KITE_CONTROLLER_SERVICE_NAME}
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${KITE_CONTROLLER_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${KITE_CONTROLLER_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${KITE_CONTROLLER_SERVICE_NAME}
        spec:
          containers:
            - name: ${KITE_CONTROLLER_SERVICE_NAME}
              image: ${KITE_CONTROLLER_IMAGE_STREAM_TAG}
              imagePullPolicy: IfNotPresent
              readinessProbe:
                httpGet:
                  path: /probe
                  port: 8080
                initialDelaySeconds: 3
                timeoutSeconds: 240
              livenessProbe:
                failureThreshold: 2
                httpGet:
                  path: /probe
                  port: 8080
                initialDelaySeconds: 420
                periodSeconds: 360
                timeoutSeconds: 240
              resources:
                limits:
                  memory: "1Gi"
                  cpu: "1000m"
                requests:
                  memory: "500Mi"
                  cpu: "512m"
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
              env:
                - name: GITHUB_ACCESS_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: github-access-token
                      key: token
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          serviceAccountName: ${KITE_CONTROLLER_SERVICE_NAME}
      triggers:
        - type: "ConfigChange"
        - type: "ImageChange"
          imageChangeParams:
            automatic: true
            containerNames:
              - ${KITE_CONTROLLER_SERVICE_NAME}
            from:
              kind: "ImageStreamTag"
              name: ${KITE_CONTROLLER_IMAGE_STREAM_TAG}
  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      name: ${KITE_CONTROLLER_SERVICE_NAME}
  - kind: RoleBinding
    apiVersion: v1
    metadata:
      name: "${KITE_CONTROLLER_SERVICE_NAME}_edit"
    groupNames:
    subjects:
      - kind: ServiceAccount
        name: "${KITE_CONTROLLER_SERVICE_NAME}"
    roleRef:
      name: edit
  # TCP port mapping 8080-80
  - kind: Service
    apiVersion: v1
    metadata:
      name: "${KITE_CONTROLLER_SERVICE_NAME}"
      annotations:
        service.openshift.io/infrastructure: "true"
      creationTimestamp:
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 80
          targetPort: 8080
          nodePort: 0
      selector:
        name: "${KITE_CONTROLLER_SERVICE_NAME}"
      type: ClusterIP
      sessionAffinity: None
# global parameters
parameters:
  - description: Git repository with Dockerfile and master entrypoint.
    displayName: Repository URL
    name: REPO_URL
    value: https://github.com/virt-s1/kite-action.git
    required: true
  - description: The sub-directory inside the repository.
    displayName: Context Directory
    name: CONTEXTDIR
    value: controller
  - description: The git ref or tag to use for customization.
    displayName: Git Reference
    name: REPO_REF
    value: master
  - name: KITE_CONTROLLER_NAME
    displayName: kite controller APP name
    description: The name of the kite controller application.
    value: kite-controller
  - name: KITE_CONTROLLER_SERVICE_NAME
    displayName: kite controller service name
    description: The name of the OpenShift Service exposed for the kite controller container.
    value: kite-controller-service
  - name: KITE_CONTROLLER_IMAGE_STREAM_TAG
    displayName: kite controller ImageStreamTag
    description: Name of the ImageStreamTag to be used for the kite controller image.
    value: kite-controller:latest
